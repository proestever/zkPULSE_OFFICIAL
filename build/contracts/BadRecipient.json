{
  "contractName": "BadRecipient",
  "abi": [
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/GIGA BRAIN/TORNADO NIGGER/tornado-core/contracts/Mocks/BadRecipient.sol\":\"BadRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/GIGA BRAIN/TORNADO NIGGER/tornado-core/contracts/Mocks/BadRecipient.sol\":{\"keccak256\":\"0x4eb4c05dc172218ad6e7d923c4e41ed0a29c044e799c92e1068712c4b63a74b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c522ecd6a871924c632f04275cc45164f9391ffafccd49278ef7363c66ed49d\",\"dweb:/ipfs/QmQ3pvyvYmBVNhmYGhNMr2KtLpSBALEXsbPdrDXN7GSaS9\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50609d80601d6000396000f3fe6080604052348015600f57600080fd5b5060405162461bcd60e51b815260040180806020018281038252602181526020018060476021913960400191505060405180910390fdfe7468697320636f6e747261637420646f6573206e6f742061636365707420455448a26469706673582212209c40b273523aea57aacaa78e3b441ae8d61e6b9d1afcda80d970286771f0b2f664736f6c63430007060033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b5060405162461bcd60e51b815260040180806020018281038252602181526020018060476021913960400191505060405180910390fdfe7468697320636f6e747261637420646f6573206e6f742061636365707420455448a26469706673582212209c40b273523aea57aacaa78e3b441ae8d61e6b9d1afcda80d970286771f0b2f664736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "60:114:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:114:3:-:0;;;;;;;;;;;;-1:-1:-1;114:51:3;;-1:-1:-1;;;114:51:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.0;\r\n\r\ncontract BadRecipient {\r\n  fallback() external {\r\n    require(false, \"this contract does not accept ETH\");\r\n  }\r\n}\r\n",
  "sourcePath": "C:/GIGA BRAIN/TORNADO NIGGER/tornado-core/contracts/Mocks/BadRecipient.sol",
  "ast": {
    "absolutePath": "/C/GIGA BRAIN/TORNADO NIGGER/tornado-core/contracts/Mocks/BadRecipient.sol",
    "exportedSymbols": {
      "BadRecipient": [
        909
      ]
    },
    "id": 910,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 899,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 909,
        "linearizedBaseContracts": [
          909
        ],
        "name": "BadRecipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "107:64:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "122:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "7468697320636f6e747261637420646f6573206e6f742061636365707420455448",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "129:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3dfa67cd4d104a688bb8ad9f6858d9a8fecb15cbae3a5d0cd6923d5d60a93c8",
                          "typeString": "literal_string \"this contract does not accept ETH\""
                        },
                        "value": "this contract does not accept ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3dfa67cd4d104a688bb8ad9f6858d9a8fecb15cbae3a5d0cd6923d5d60a93c8",
                          "typeString": "literal_string \"this contract does not accept ETH\""
                        }
                      ],
                      "id": 902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "114:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "114:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "114:51:3"
                }
              ]
            },
            "id": 908,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "95:2:3"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "107:0:3"
            },
            "scope": 909,
            "src": "87:84:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 910,
        "src": "60:114:3"
      }
    ],
    "src": "33:143:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/GIGA BRAIN/TORNADO NIGGER/tornado-core/contracts/Mocks/BadRecipient.sol",
      "exportedSymbols": {
        "BadRecipient": [
          909
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 899,
        "name": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            909
          ],
          "name": "BadRecipient",
          "scope": 910
        },
        "children": [
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "fallback",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 909,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 900,
                "name": "ParameterList",
                "src": "95:2:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 901,
                "name": "ParameterList",
                "src": "107:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a3dfa67cd4d104a688bb8ad9f6858d9a8fecb15cbae3a5d0cd6923d5d60a93c8",
                                  "typeString": "literal_string \"this contract does not accept ETH\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 902,
                            "name": "Identifier",
                            "src": "114:7:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 903,
                            "name": "Literal",
                            "src": "122:5:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7468697320636f6e747261637420646f6573206e6f742061636365707420455448",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this contract does not accept ETH\"",
                              "value": "this contract does not accept ETH"
                            },
                            "id": 904,
                            "name": "Literal",
                            "src": "129:35:3"
                          }
                        ],
                        "id": 905,
                        "name": "FunctionCall",
                        "src": "114:51:3"
                      }
                    ],
                    "id": 906,
                    "name": "ExpressionStatement",
                    "src": "114:51:3"
                  }
                ],
                "id": 907,
                "name": "Block",
                "src": "107:64:3"
              }
            ],
            "id": 908,
            "name": "FunctionDefinition",
            "src": "87:84:3"
          }
        ],
        "id": 909,
        "name": "ContractDefinition",
        "src": "60:114:3"
      }
    ],
    "id": 910,
    "name": "SourceUnit",
    "src": "33:143:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2025-08-18T20:38:55.816Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}